Index: src/main/java/com/example/finalproject/shared/WebSockChatHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.finalproject.shared;\r\n\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.move.Bunjang.domain.ChatMessage;\r\nimport com.move.Bunjang.domain.ChatRoom;\r\nimport com.move.Bunjang.service.ChatService;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Component;\r\nimport org.springframework.web.socket.TextMessage;\r\nimport org.springframework.web.socket.WebSocketSession;\r\nimport org.springframework.web.socket.handler.TextWebSocketHandler;\r\n\r\n@Slf4j\r\n@RequiredArgsConstructor\r\n@Component\r\npublic class WebSockChatHandler extends TextWebSocketHandler {\r\n\r\n    private final ObjectMapper objectMapper;\r\n    private final ChatService chatService;\r\n\r\n    @Override\r\n    protected void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception {\r\n        String payload = message.getPayload();\r\n        log.info(\"payload {}\", payload);\r\n        ChatMessage chatMessage = objectMapper.readValue(payload, ChatMessage.class);\r\n        ChatRoom room = chatService.findRoomById(chatMessage.getRoomId());\r\n        room.handleActions(session, chatMessage, chatService);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/finalproject/shared/WebSockChatHandler.java b/src/main/java/com/example/finalproject/shared/WebSockChatHandler.java
--- a/src/main/java/com/example/finalproject/shared/WebSockChatHandler.java	(revision 6c1e0da5c8e814991ca6a3e745ccf79208ed49c0)
+++ b/src/main/java/com/example/finalproject/shared/WebSockChatHandler.java	(date 1667576835578)
@@ -1,9 +1,7 @@
 package com.example.finalproject.shared;
 
 import com.fasterxml.jackson.databind.ObjectMapper;
-import com.move.Bunjang.domain.ChatMessage;
-import com.move.Bunjang.domain.ChatRoom;
-import com.move.Bunjang.service.ChatService;
+
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.stereotype.Component;
@@ -17,14 +15,14 @@
 public class WebSockChatHandler extends TextWebSocketHandler {
 
     private final ObjectMapper objectMapper;
-    private final ChatService chatService;
-
-    @Override
-    protected void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception {
-        String payload = message.getPayload();
-        log.info("payload {}", payload);
-        ChatMessage chatMessage = objectMapper.readValue(payload, ChatMessage.class);
-        ChatRoom room = chatService.findRoomById(chatMessage.getRoomId());
-        room.handleActions(session, chatMessage, chatService);
-    }
+//    private final ChatService chatService;
+//
+//    @Override
+//    protected void handleTextMessage(WebSocketSession session, TextMessage message) throws Exception {
+//        String payload = message.getPayload();
+//        log.info("payload {}", payload);
+//        ChatMessage chatMessage = objectMapper.readValue(payload, ChatMessage.class);
+//        ChatRoom room = chatService.findRoomById(chatMessage.getRoomId());
+//        room.handleActions(session, chatMessage, chatService);
+//    }
 }
\ No newline at end of file
